#!/usr/bin/env python
"""Script to create a mac pkg installer.

This script assumes that an executable has been produced previously
by the sibling script make-pyinstaller.
"""
import argparse
import os
import sys
import shutil

sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from utils import run, tmp_dir, extract_zip


ROOT = os.path.dirname(os.path.dirname(os.path.dirname(
    os.path.abspath(__file__))))
PKG_DIR = os.path.join(ROOT, 'macpkg')
SCRIPTS_DIR = os.path.join(PKG_DIR, 'scripts')
RESOURCES_DIR = os.path.join(PKG_DIR, 'resources')
DISTRIBUTION_PATH = os.path.join(PKG_DIR, 'distribution.xml')

TEMP_PKG_NAME = 'aws-cli.pkg'
PKG_NAME = 'AWS-CLI-Installer.pkg'
EXE_ZIP_NAME = 'awscli-exe.zip'
EXE_NAME = 'aws2'


def make_pkg(pkg_name, src_exe):
    with tmp_dir() as workdir:
        extract_zip(src_exe, workdir)
        do_make_pkg(workdir, pkg_name)


def do_make_pkg(workdir, pkg_name):
    version = get_version(workdir)
    print(run(
        (
            'pkgbuild --identifier com.amazon.aws.cli2 '
            '--root ./aws/dist '
            '--install-location /usr/local/aws/ '
            '--scripts %s '
            '--version %s '
            '%s'
        ) % (SCRIPTS_DIR, version, TEMP_PKG_NAME),
        cwd=workdir,
    ))
    print(run(
        (
            'productbuild --distribution %s '
            '--resources %s '
            '%s'
        ) % (DISTRIBUTION_PATH, RESOURCES_DIR, PKG_NAME),
        cwd=workdir,
    ))
    shutil.copyfile(os.path.join(workdir, PKG_NAME), pkg_name)


def get_version(output_dir):
    exe_dir = os.path.join(output_dir, 'aws', 'dist')
    exe_path = os.path.join(exe_dir, EXE_NAME)
    result = run('%s --version' % exe_path, cwd=exe_dir).strip()
    version = result.split(' ')[0].split('/')[1]
    return version


def main():
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument(
        '--output',
        default=os.path.join(ROOT, 'dist', PKG_NAME),
        help=(
            'The output PKG name. By default, this will be '
            '"dist/%s" in the root of the awscli.' % PKG_NAME
        )
    )
    parser.add_argument(
        '--src-exe',
        default=os.path.join(ROOT, 'dist', EXE_ZIP_NAME),
        help=(
            'The exe used to build the PKG. By default, this will be the'
            '"dist/%s" zipfile in the root of the awscli.' % EXE_ZIP_NAME
        )
    )
    args = parser.parse_args()
    output = os.path.abspath(args.output)
    src_exe = os.path.abspath(args.src_exe)
    make_pkg(output, src_exe)


if __name__ == "__main__":
    main()
